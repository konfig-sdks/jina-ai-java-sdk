/*
 * The Jina Embedding Serving API
 * This is the UniversalAPI to access all the Jina embedding models
 *
 * The version of the OpenAPI document: 0.0.86
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.BulkEmbeddingJobStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * BulkEmbeddingJobResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class BulkEmbeddingJobResponse {
  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_MODEL_NAME = "model_name";
  @SerializedName(SERIALIZED_NAME_MODEL_NAME)
  private String modelName;

  public static final String SERIALIZED_NAME_MODEL_PACKAGE_ARN = "model_package_arn";
  @SerializedName(SERIALIZED_NAME_MODEL_PACKAGE_ARN)
  private String modelPackageArn;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private BulkEmbeddingJobStatus status;

  public static final String SERIALIZED_NAME_FILE_NAME = "file_name";
  @SerializedName(SERIALIZED_NAME_FILE_NAME)
  private String fileName;

  public static final String SERIALIZED_NAME_USER_EMAIL = "user_email";
  @SerializedName(SERIALIZED_NAME_USER_EMAIL)
  private String userEmail;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_COMPLETED_AT = "completed_at";
  @SerializedName(SERIALIZED_NAME_COMPLETED_AT)
  private OffsetDateTime completedAt;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private String error;

  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_USED_TOKEN_COUNT = "used_token_count";
  @SerializedName(SERIALIZED_NAME_USED_TOKEN_COUNT)
  private Integer usedTokenCount;

  public BulkEmbeddingJobResponse() {
  }

  public BulkEmbeddingJobResponse userId(String userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * The user ID of the user who created the job
   * @return userId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The user ID of the user who created the job")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    
    
    
    this.userId = userId;
  }


  public BulkEmbeddingJobResponse modelName(String modelName) {
    
    
    
    
    this.modelName = modelName;
    return this;
  }

   /**
   * The name of the model to use
   * @return modelName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "model_1", required = true, value = "The name of the model to use")

  public String getModelName() {
    return modelName;
  }


  public void setModelName(String modelName) {
    
    
    
    this.modelName = modelName;
  }


  public BulkEmbeddingJobResponse modelPackageArn(String modelPackageArn) {
    
    
    
    
    this.modelPackageArn = modelPackageArn;
    return this;
  }

   /**
   * The model package ARN
   * @return modelPackageArn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The model package ARN")

  public String getModelPackageArn() {
    return modelPackageArn;
  }


  public void setModelPackageArn(String modelPackageArn) {
    
    
    
    this.modelPackageArn = modelPackageArn;
  }


  public BulkEmbeddingJobResponse status(BulkEmbeddingJobStatus status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * The status of the job
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The status of the job")

  public BulkEmbeddingJobStatus getStatus() {
    return status;
  }


  public void setStatus(BulkEmbeddingJobStatus status) {
    
    
    
    this.status = status;
  }


  public BulkEmbeddingJobResponse fileName(String fileName) {
    
    
    
    
    this.fileName = fileName;
    return this;
  }

   /**
   * The name of the input file
   * @return fileName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "input.csv", required = true, value = "The name of the input file")

  public String getFileName() {
    return fileName;
  }


  public void setFileName(String fileName) {
    
    
    
    this.fileName = fileName;
  }


  public BulkEmbeddingJobResponse userEmail(String userEmail) {
    
    
    
    
    this.userEmail = userEmail;
    return this;
  }

   /**
   * The email of the user who created the job
   * @return userEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The email of the user who created the job")

  public String getUserEmail() {
    return userEmail;
  }


  public void setUserEmail(String userEmail) {
    
    
    
    this.userEmail = userEmail;
  }


  public BulkEmbeddingJobResponse createdAt(OffsetDateTime createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Time of creation of the job.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time of creation of the job.")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public BulkEmbeddingJobResponse completedAt(OffsetDateTime completedAt) {
    
    
    
    
    this.completedAt = completedAt;
    return this;
  }

   /**
   * Time of completion of the job.
   * @return completedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time of completion of the job.")

  public OffsetDateTime getCompletedAt() {
    return completedAt;
  }


  public void setCompletedAt(OffsetDateTime completedAt) {
    
    
    
    this.completedAt = completedAt;
  }


  public BulkEmbeddingJobResponse error(String error) {
    
    
    
    
    this.error = error;
    return this;
  }

   /**
   * The error message of the job
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The error message of the job")

  public String getError() {
    return error;
  }


  public void setError(String error) {
    
    
    
    this.error = error;
  }


  public BulkEmbeddingJobResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the job
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID of the job")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public BulkEmbeddingJobResponse usedTokenCount(Integer usedTokenCount) {
    
    
    
    
    this.usedTokenCount = usedTokenCount;
    return this;
  }

   /**
   * The number of tokens used for the job
   * @return usedTokenCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000", value = "The number of tokens used for the job")

  public Integer getUsedTokenCount() {
    return usedTokenCount;
  }


  public void setUsedTokenCount(Integer usedTokenCount) {
    
    
    
    this.usedTokenCount = usedTokenCount;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the BulkEmbeddingJobResponse instance itself
   */
  public BulkEmbeddingJobResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkEmbeddingJobResponse bulkEmbeddingJobResponse = (BulkEmbeddingJobResponse) o;
    return Objects.equals(this.userId, bulkEmbeddingJobResponse.userId) &&
        Objects.equals(this.modelName, bulkEmbeddingJobResponse.modelName) &&
        Objects.equals(this.modelPackageArn, bulkEmbeddingJobResponse.modelPackageArn) &&
        Objects.equals(this.status, bulkEmbeddingJobResponse.status) &&
        Objects.equals(this.fileName, bulkEmbeddingJobResponse.fileName) &&
        Objects.equals(this.userEmail, bulkEmbeddingJobResponse.userEmail) &&
        Objects.equals(this.createdAt, bulkEmbeddingJobResponse.createdAt) &&
        Objects.equals(this.completedAt, bulkEmbeddingJobResponse.completedAt) &&
        Objects.equals(this.error, bulkEmbeddingJobResponse.error) &&
        Objects.equals(this.id, bulkEmbeddingJobResponse.id) &&
        Objects.equals(this.usedTokenCount, bulkEmbeddingJobResponse.usedTokenCount)&&
        Objects.equals(this.additionalProperties, bulkEmbeddingJobResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, modelName, modelPackageArn, status, fileName, userEmail, createdAt, completedAt, error, id, usedTokenCount, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkEmbeddingJobResponse {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    modelPackageArn: ").append(toIndentedString(modelPackageArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    userEmail: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    completedAt: ").append(toIndentedString(completedAt)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    usedTokenCount: ").append(toIndentedString(usedTokenCount)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("user_id");
    openapiFields.add("model_name");
    openapiFields.add("model_package_arn");
    openapiFields.add("status");
    openapiFields.add("file_name");
    openapiFields.add("user_email");
    openapiFields.add("created_at");
    openapiFields.add("completed_at");
    openapiFields.add("error");
    openapiFields.add("_id");
    openapiFields.add("used_token_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("user_id");
    openapiRequiredFields.add("model_name");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("file_name");
    openapiRequiredFields.add("_id");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to BulkEmbeddingJobResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!BulkEmbeddingJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BulkEmbeddingJobResponse is not found in the empty JSON string", BulkEmbeddingJobResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BulkEmbeddingJobResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("user_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_id").toString()));
      }
      if (!jsonObj.get("model_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model_name").toString()));
      }
      if ((jsonObj.get("model_package_arn") != null && !jsonObj.get("model_package_arn").isJsonNull()) && !jsonObj.get("model_package_arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model_package_arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model_package_arn").toString()));
      }
      if (!jsonObj.get("file_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `file_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("file_name").toString()));
      }
      if ((jsonObj.get("user_email") != null && !jsonObj.get("user_email").isJsonNull()) && !jsonObj.get("user_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_email").toString()));
      }
      if ((jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) && !jsonObj.get("error").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `error` to be a primitive type in the JSON string but got `%s`", jsonObj.get("error").toString()));
      }
      if (!jsonObj.get("_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BulkEmbeddingJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BulkEmbeddingJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BulkEmbeddingJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BulkEmbeddingJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<BulkEmbeddingJobResponse>() {
           @Override
           public void write(JsonWriter out, BulkEmbeddingJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public BulkEmbeddingJobResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             BulkEmbeddingJobResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BulkEmbeddingJobResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BulkEmbeddingJobResponse
  * @throws IOException if the JSON string is invalid with respect to BulkEmbeddingJobResponse
  */
  public static BulkEmbeddingJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BulkEmbeddingJobResponse.class);
  }

 /**
  * Convert an instance of BulkEmbeddingJobResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

